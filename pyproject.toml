[project]
name = "git-recap"
version = "0.6.0"
description = "Summarize recent Git contributions into clear, human-readable updates using AI"
readme = "README.md"
authors = [
    { name = "Rafid K.", email = "rafidka@gmail.com" }
]
requires-python = ">=3.12"
dependencies = [
    "GitPython>=3.1.45",
    "typer>=0.16.1",
    "openai>=1.100.0"
]

[project.scripts]
git-recap = "git_recap:main"

[build-system]
requires = ["uv_build>=0.8.11,<0.9.0"]
build-backend = "uv_build"

[dependency-groups]
dev = [
    "pyright>=1.1.403",
    "ruff>=0.12.9",
]

[tool.pyright]
reportMissingImports = false
typeCheckingMode = "strict"
venv = ".venv"
venvPath = "."

[tool.ruff]
line-length = 88
target-version = "py312"
include = [
    "src/git_recap/**/*.py",
    "tests/**/*.py",
]

[tool.ruff.lint]
extend-select = [
    "Q",
    "RUF100",
    "C90",
    "UP",
    "I",
    "D",
]
isort = { combine-as-imports = true, known-first-party = ["git_recap"] }
mccabe = { max-complexity = 15 }
ignore = [
    "D100", # ignore missing docstring in module
    "D102", # ignore missing docstring in public method
    "D104", # ignore missing docstring in public package
    "D105", # ignore missing docstring in magic methods
    "D107", # ignore missing docstring in __init__ methods
    "D200", # ignore one-line docstring should not be in multi-line format
    "D212", # ignore multi-line docstring summary should start at the second line
]

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.ruff.lint.per-file-ignores]
"tests/**/*.py" = ["D"]
"docs/**/*.py" = ["D"]
